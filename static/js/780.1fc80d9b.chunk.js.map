{"version":3,"file":"static/js/780.1fc80d9b.chunk.js","mappings":"mTAEMA,EAAU,mCACVC,EAAW,KACjBC,EAAAA,GAAAA,SAAAA,QAAyB,gCAIjB,IAAMC,EAAmB,mCAAG,6GAAOC,EAAP,+BAAc,EAAGC,EAAjB,0CAGPH,EAAAA,EAAAA,IAAM,qBAAsB,CACjDG,OAAAA,EACAC,OAAQ,CACNC,QAASP,EACTC,SAAUA,EACVG,KAAMA,KARoB,uBAGtBI,EAHsB,EAGtBA,KAHsB,kBAYvBA,GAZuB,wCAcxB,IAAIC,MAAM,KAAEC,SAdY,0DAAH,qDAkBlBC,EAAgB,mCAAG,WAAOC,EAAaP,GAApB,mGAGLH,EAAAA,EAAAA,IAAM,eAAgB,CAC3CG,OAAAA,EACAC,OAAQ,CACNC,QAASP,EACTa,MAAOD,EACPX,SAAUA,EACVG,KAAM,KATkB,uBAGpBI,EAHoB,EAGpBA,KAHoB,kBAmBrBA,EAAKM,SAnBgB,sCAqBtB,IAAIL,MAAM,KAAEC,SArBU,yDAAH,wDAyBfK,EAAoB,mCAAG,WAAOC,GAAP,mGAGVd,EAAAA,EAAAA,IAAM,SAAD,OAAUc,GAAM,CAC1CV,OAAQ,CACNC,QAASP,EACTC,SAAUA,KANmB,uBAGzBO,EAHyB,EAGzBA,KAHyB,kBAW1BA,GAX0B,sCAa3B,IAAIC,MAAM,KAAEC,SAbe,yDAAH,sDAiBnBO,EAAsB,mCAAG,WAAOD,GAAP,mGAGbd,EAAAA,EAAAA,IAAM,SAAD,OAAUc,EAAV,YAAwB,CAClDV,OAAQ,CACNC,QAASP,EACTC,SAAUA,KANsB,uBAG5BO,EAH4B,EAG5BA,KAH4B,kBAW7BA,GAX6B,sCAa9B,IAAIC,MAAM,KAAEC,SAbkB,yDAAH,sDAiBtBQ,EAAqB,mCAAG,WAAOF,GAAP,mGAGZd,EAAAA,EAAAA,IAAM,SAAD,OAAUc,EAAV,YAAwB,CAClDV,OAAQ,CACNC,QAASP,EACTC,SAAUA,KANqB,uBAG3BO,EAH2B,EAG3BA,KAH2B,kBAW5BA,GAX4B,sCAa7B,IAAIC,MAAM,KAAEC,SAbiB,yDAAH,qD,uJCnFzBS,E,QAAcC,GAAAA,GAAH,8KAGP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQC,OAApB,I,SCyClB,EAzCgB,WACZ,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAdAE,QAAQC,IAAIH,IACZI,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE+Bd,EAAAA,EAAAA,IAAsBU,GAFrD,OAEcK,EAFd,OAGQN,EAAWM,EAASnB,SAH5B,gDAMQgB,QAAQI,MAAR,MANR,0DADY,uBAAC,WAAD,wBAUbC,EACF,GAAE,CAACP,IAEAF,GAA8B,IAAnBA,EAAQU,QAAqB,yEAExC,SAACjB,EAAD,UACMO,GAAWA,EAAQW,KAAI,SAAAC,GAErB,IAAOtB,EAAuBsB,EAAvBtB,GAAIuB,EAAmBD,EAAnBC,OAAQC,EAAWF,EAAXE,QAMpB,OAEC,2BACO,qCAAaD,MACb,yBAAMC,MAFJxB,EAIZ,KAIZ,C","sources":["ApiServise/api.themoviedb.js","components/MovieDetails/Reviews/Reviews.styled.jsx","components/MovieDetails/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'e4c439da3c1d90110fb4595b6236c9fe';\nconst language = 'en'\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\n\n export const fetchTrendingMovies = async (page = 1, signal) => {\n    try {\n\n      const { data } = await axios('trending/movie/day', {\n        signal,\n        params: {\n          api_key: API_KEY,\n          language: language,\n          page: page,\n        },\n      });\n    \n      return data;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n\n export const  fetchSearchMovie = async (searchQuery, signal) => {\n    try {\n    \n      const { data } = await axios('search/movie', {\n        signal,\n        params: {\n          api_key: API_KEY,\n          query: searchQuery,\n          language: language,\n          page: 1,\n        },\n      });\n     \n\n    //   if (this.searchQuery === '') {\n    //     return;\n    //   }\n    //   this.total_pages = data.total_pages;\n\n      return data.results;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n\n  export const  fetchSearchMovieById = async (id) => {\n    try {\n    \n      const { data } = await axios(`movie/${id}`, {\n        params: {\n          api_key: API_KEY,\n          language: language,\n        },\n      });\n      \n\n      return data;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n\n   export const  fetchMovieCreditshById = async (id) => {\n    try {\n    \n      const { data } = await axios(`movie/${id}/credits`, {\n        params: {\n          api_key: API_KEY,\n          language: language,\n        },\n      });\n      \n\n      return data;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n\n   export const  fetchMovieReviewsById = async (id) => {\n    try {\n    \n      const { data } = await axios(`movie/${id}/reviews`, {\n        params: {\n          api_key: API_KEY,\n          language: language,\n        },\n      });\n      \n\n      return data;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n\n\n\n\n\n\n","import styled from \"styled-components\";\n\nexport const ReviewsList = styled.ul`\n    li {\n        margin:10px 0;\n        border:${p => p.theme.borders.profile};\n        padding: 10px;\n    }\n\n    li:nth-child(2n+2) {\n    background-color:#f2f3f5;\n  }\n`","import { useEffect, useState } from \"react\"\nimport { useParams} from \"react-router-dom\";\nimport { fetchMovieReviewsById } from \"ApiServise/api.themoviedb\";\nimport {ReviewsList} from './Reviews.styled'\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState(null)\n    const { movieId } = useParams()\n    console.log(movieId)\n    useEffect(() => {\n        async function getReviews() {\n            try {\n                const response = await fetchMovieReviewsById(movieId)\n                setReviews(response.results)\n                \n            } catch (e) {\n                console.error(e)\n          }    \n       }\n       getReviews()\n    }, [movieId]) \n    \n    if (reviews && reviews.length === 0) return <span> We dont have any reviews for this movie.</span>\n    return (\n        <ReviewsList>\n             {reviews && reviews.map(r => {\n\n                const {id, author, content} = r\n                // let image =\n                //     profile_path === null\n                //     ? 'https://dummyimage.com/400x600/7d7d7d/fff.jpg&text=image+not+found'\n                //         : `https://image.tmdb.org/t/p/w400/${profile_path}`;\n                            \n               return (\n                \n                <li key={id}>\n                       <h3>Author: {author}</h3>\n                       <div>{content}</div>\n                </li>) \n            })} \n            \n        </ReviewsList>\n    )\n}\n\n\nexport default Reviews"],"names":["API_KEY","language","axios","fetchTrendingMovies","page","signal","params","api_key","data","Error","message","fetchSearchMovie","searchQuery","query","results","fetchSearchMovieById","id","fetchMovieCreditshById","fetchMovieReviewsById","ReviewsList","styled","p","theme","borders","profile","useState","reviews","setReviews","movieId","useParams","console","log","useEffect","response","error","getReviews","length","map","r","author","content"],"sourceRoot":""}