{"version":3,"file":"static/js/803.4c093990.chunk.js","mappings":"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","sources":["ApiServise/api.themoviedb.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.js","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.js","pages/Home.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'e4c439da3c1d90110fb4595b6236c9fe';\nconst language = 'en'\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\n\n export const fetchTrendingMovies = async (page = 1, signal) => {\n    try {\n\n      const { data } = await axios('trending/movie/day', {\n        signal,\n        params: {\n          api_key: API_KEY,\n          language: language,\n          page: page,\n        },\n      });\n    \n      return data;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n\n export const  fetchSearchMovie = async (searchQuery, signal) => {\n    try {\n    \n      const { data } = await axios('search/movie', {\n        signal,\n        params: {\n          api_key: API_KEY,\n          query: searchQuery,\n          language: language,\n          page: 1,\n        },\n      });\n     \n\n    //   if (this.searchQuery === '') {\n    //     return;\n    //   }\n    //   this.total_pages = data.total_pages;\n\n      return data.results;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n\n  export const  fetchSearchMovieById = async (id) => {\n    try {\n    \n      const { data } = await axios(`movie/${id}`, {\n        params: {\n          api_key: API_KEY,\n          language: language,\n        },\n      });\n      \n\n      return data;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n\n   export const  fetchMovieCreditshById = async (id) => {\n    try {\n    \n      const { data } = await axios(`movie/${id}/credits`, {\n        params: {\n          api_key: API_KEY,\n          language: language,\n        },\n      });\n      \n\n      return data;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n\n   export const  fetchMovieReviewsById = async (id) => {\n    try {\n    \n      const { data } = await axios(`movie/${id}/reviews`, {\n        params: {\n          api_key: API_KEY,\n          language: language,\n        },\n      });\n      \n\n      return data;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n\n\n\n\n\n\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\"\n\nexport const MoviesList = styled.ul`\n display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 16px 0 0 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`\nexport const Poster = styled.img`\n    width: 150px;\n    margin-bottom:10px;\n`\n\nexport const StyledLink = styled(Link)`\n    display: flex;\n    flex-direction:column;\n    align-items:center;\n    text-decoration:none;\n    text-align: center;\n    color:black;\n    max-width:200px;\n    \n`\nexport const ListItem = styled.li`\n    margin: 0 auto;\n`","import { MoviesList as List, Poster, StyledLink, ListItem } from \"./MoviesList.styled\"\n\nconst MoviesList = ({ Movies, location}) => {\n    return (\n            <List>\n                {Movies.length > 0 && Movies.map(movie => {\n                    return <ListItem key={movie.id}>\n                        <StyledLink to={`/movies/${movie.id}`} state={{from:location}}>\n                            <Poster src={movie.poster_path === null\n                                ? 'https://dummyimage.com/400x600/7d7d7d/fff.jpg&text=image+not+found'\n                                : `https://image.tmdb.org/t/p/w400/${movie.poster_path}`}\n                                alt={movie.title} />\n                            {movie.title}\n                        </StyledLink>\n                    </ListItem>\n                })}\n            </List>\n    )\n}\n\n\nexport default MoviesList","import styled from \"styled-components\";\nimport { Pagination } from \"@material-ui/lab\";\n\nexport const PaginationWrapper = styled.div`\n   display:flex;\n   justify-content:center;\n`\n\nexport const PaginationPanel = styled(Pagination)`\n    margin-top:30px;\n    margin-bottom:30px;\n`","import { PaginationPanel, PaginationWrapper } from \"./Pagination.styled\";\n\nconst Pagination = ({ page, onChange }) => {\n    const count = 100\n    return (\n        <PaginationWrapper>\n            <PaginationPanel\n                count={count}\n                size=\"large\"\n                page={page}\n                variant=\"outlined\"\n                shape=\"rounded\"\n                onChange={onChange}\n            />\n        </PaginationWrapper>\n    )\n}\n\nexport default Pagination","import { useEffect, useState } from \"react\"\nimport { useLocation } from \"react-router-dom\";\nimport Pagination from \"components/Pagination/Pagination\"\n\nimport MoviesList from \"components/MoviesList/MoviesList\"\nimport { fetchTrendingMovies } from \"ApiServise/api.themoviedb\"\n\n\n\nconst Home = () => {\n    const [page, setPage] = useState(1);\n    const [trMovies, setTrMovies] = useState([])\n    const location = useLocation()\n\n    useEffect(() => {\n        const controller = new AbortController();\n        async function getMovies() {\n            try {\n                const response = await fetchTrendingMovies(page, controller.signal)\n                setTrMovies(() => [...response.results])\n                \n            } catch (e) {\n                console.error(e)\n          }    \n       }\n        getMovies()\n        return () => controller.abort()\n    },[page]   \n    )\n    \n    \n    const handleChange = (e, p) => {\n        setPage(p);\n    };\n\n          \n    return (\n        <>\n            <Pagination page={page} onChange={handleChange} />\n            <MoviesList Movies={trMovies} location={location} />\n            <Pagination page={page} onChange={handleChange}/>\n        </>\n    )\n}\n\nexport default Home"],"names":["API_KEY","language","axios","fetchTrendingMovies","page","signal","params","api_key","data","Error","message","fetchSearchMovie","searchQuery","query","results","fetchSearchMovieById","id","fetchMovieCreditshById","fetchMovieReviewsById","MoviesList","styled","Poster","StyledLink","Link","ListItem","Movies","location","length","map","movie","to","state","from","src","poster_path","alt","title","PaginationWrapper","PaginationPanel","Pagination","onChange","count","size","variant","shape","useState","setPage","trMovies","setTrMovies","useLocation","useEffect","controller","AbortController","response","console","error","getMovies","abort","handleChange","e","p"],"sourceRoot":""}