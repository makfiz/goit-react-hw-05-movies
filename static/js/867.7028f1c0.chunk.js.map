{"version":3,"file":"static/js/867.7028f1c0.chunk.js","mappings":"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","sources":["ApiServise/api.themoviedb.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.js","components/Form/Form.styled.jsx","components/Form/Form.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'e4c439da3c1d90110fb4595b6236c9fe';\nconst language = 'en'\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\n\n export const fetchTrendingMovies = async (page = 1, signal) => {\n    try {\n\n      const { data } = await axios('trending/movie/day', {\n        signal,\n        params: {\n          api_key: API_KEY,\n          language: language,\n          page: page,\n        },\n      });\n    \n      return data;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n\n export const  fetchSearchMovie = async (searchQuery, signal) => {\n    try {\n    \n      const { data } = await axios('search/movie', {\n        signal,\n        params: {\n          api_key: API_KEY,\n          query: searchQuery,\n          language: language,\n          page: 1,\n        },\n      });\n     \n\n    //   if (this.searchQuery === '') {\n    //     return;\n    //   }\n    //   this.total_pages = data.total_pages;\n\n      return data.results;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n\n  export const  fetchSearchMovieById = async (id) => {\n    try {\n    \n      const { data } = await axios(`movie/${id}`, {\n        params: {\n          api_key: API_KEY,\n          language: language,\n        },\n      });\n      \n\n      return data;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n\n   export const  fetchMovieCreditshById = async (id) => {\n    try {\n    \n      const { data } = await axios(`movie/${id}/credits`, {\n        params: {\n          api_key: API_KEY,\n          language: language,\n        },\n      });\n      \n\n      return data;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n\n   export const  fetchMovieReviewsById = async (id) => {\n    try {\n    \n      const { data } = await axios(`movie/${id}/reviews`, {\n        params: {\n          api_key: API_KEY,\n          language: language,\n        },\n      });\n      \n\n      return data;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n\n\n\n\n\n\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\"\n\nexport const MoviesList = styled.ul`\n display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 16px 0 0 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`\nexport const Poster = styled.img`\n    width: 150px;\n    margin-bottom:10px;\n`\n\nexport const StyledLink = styled(Link)`\n    display: flex;\n    flex-direction:column;\n    align-items:center;\n    text-decoration:none;\n    text-align: center;\n    color:black;\n    max-width:200px;\n    \n`\nexport const ListItem = styled.li`\n    margin: 0 auto;\n`","import { MoviesList as List, Poster, StyledLink, ListItem } from \"./MoviesList.styled\"\n\nconst MoviesList = ({ Movies, location}) => {\n    return (\n            <List>\n                {Movies.length > 0 && Movies.map(movie => {\n                    return <ListItem key={movie.id}>\n                        <StyledLink to={`/movies/${movie.id}`} state={{from:location}}>\n                            <Poster src={movie.poster_path === null\n                                ? 'https://dummyimage.com/400x600/7d7d7d/fff.jpg&text=image+not+found'\n                                : `https://image.tmdb.org/t/p/w400/${movie.poster_path}`}\n                                alt={movie.title} />\n                            {movie.title}\n                        </StyledLink>\n                    </ListItem>\n                })}\n            </List>\n    )\n}\n\n\nexport default MoviesList","import styled from \"styled-components\";\nimport { Form, Field } from 'formik'\n    \n\nexport const FormWrapper = styled.div`\n  display:flex;\n  justify-content:center;\n`\n\nexport const SearchForm = styled(Form)`\n  margin: 20px 0;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border:${p => p.theme.borders.profile};\n  border-radius: 3px;\n  overflow: hidden;\n  `\n\nexport const SearchInp = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n}\n  `\nexport const IconBox = styled.button`\n display: inline-block;\n  width: 35px;\n  height: 35px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  outline: none;\n`","import { Formik } from 'formik'\nimport {FormWrapper, SearchForm, SearchInp, IconBox } from './Form.styled'\nimport { ImSearch } from \"react-icons/im\";\n\nexport const Form = ({onChange, searchedMovie}) => {\n     const initialValues = {\n        search: '',\n    }\n\n\n    const changeHandler = (values) => {\n          onChange(values)\n    }\n    \n    return (\n        <Formik initialValues={initialValues}>\n            <FormWrapper>\n            <SearchForm  autoComplete=\"off\" onChange={(e) => changeHandler(e.target.value)}>\n            \n                <SearchInp\n                    name='search'\n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Search movies\"\n                    value={searchedMovie}\n                />\n                <IconBox disabled>\n                <ImSearch/>\n                </IconBox>\n            </SearchForm>\n            </FormWrapper>\n        </Formik>\n    )\n}","import { useEffect, useState } from \"react\"\nimport {useSearchParams, useLocation } from \"react-router-dom\"\nimport {Suspense } from \"react\";\n\nimport { fetchSearchMovie} from \"ApiServise/api.themoviedb\";\n\nimport { Form} from 'components/Form/Form'\nimport MoviesList from \"components/MoviesList/MoviesList\"\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([])\n    const [responseEmpty, setResponseEmpty] = useState(false)\n    const [searchParams, setSearchParams] = useSearchParams()\n    const searchedMovie = searchParams.get(\"query\") ?? \"\"\n    const location = useLocation()\n    \n\n    useEffect(() => {\n        if (!searchedMovie) return\n        const controller = new AbortController();\n        async function getMoviesById() {\n            \n            try {\n                const response = await fetchSearchMovie(searchedMovie, controller.signal)\n                \n                console.log(response)\n                setMovies(response)\n\n                if (response.length === 0) {\n                    setResponseEmpty(true)\n                }\n                \n            } catch (e) {\n                console.error(e)\n          }    \n       }\n       getMoviesById()\n       return () => controller.abort()\n    },[searchedMovie])\n\n\n    const queryHundler = (value) => {\n        console.log(value)\n        setSearchParams(value !== '' ? {query:value.trim()} : {})\n       \n    }\n\n    return (\n        <>   <Suspense fallback={<div>Loading subpage...</div>}>\n            <Form onChange={queryHundler} searchedMovie={searchedMovie} responseEmpty={responseEmpty} />\n            <MoviesList Movies={movies} location={location} />\n            {responseEmpty && <h1 style={{ textAlign: \"center\" }}>No results were found for {searchedMovie}</h1>}\n            </Suspense>\n        </>\n    )\n}\n\nexport default Movies"],"names":["API_KEY","language","axios","fetchTrendingMovies","page","signal","params","api_key","data","Error","message","fetchSearchMovie","searchQuery","query","results","fetchSearchMovieById","id","fetchMovieCreditshById","fetchMovieReviewsById","MoviesList","styled","Poster","StyledLink","Link","ListItem","Movies","location","length","map","movie","to","state","from","src","poster_path","alt","title","FormWrapper","SearchForm","Form","p","theme","borders","profile","SearchInp","Field","IconBox","onChange","searchedMovie","changeHandler","values","initialValues","search","autoComplete","e","target","value","name","type","autoFocus","placeholder","disabled","useState","movies","setMovies","responseEmpty","setResponseEmpty","useSearchParams","searchParams","setSearchParams","get","useLocation","useEffect","controller","AbortController","getMoviesById","abort","response","console","log","error","Suspense","fallback","trim","style","textAlign"],"sourceRoot":""}